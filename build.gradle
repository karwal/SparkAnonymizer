import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

plugins {
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.apache.spark', name: 'spark-sql_2.12', version: '3.0.0'
    implementation group: 'org.apache.spark', name: 'spark-core_2.12', version: '3.0.0'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.2.4'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.7.0-RC1'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.7.0-RC1'
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '3.5.10'
}

test {
    useJUnitPlatform()
    testLogging.events.addAll([TestLogEvent.PASSED, TestLogEvent.SKIPPED, TestLogEvent.FAILED])
    testLogging {
        afterSuite { desc, result ->
            if (!desc.parent) { // group the results in one
                def output = "Results: ${result.resultType} (" +
                        "${result.testCount} tests, " +
                        "${result.successfulTestCount} successes, " +
                        "${result.failedTestCount} failures, " +
                        "${result.skippedTestCount} skipped)"
                def startItem = '|  ', endItem = '  |'
                def repeatLength = startItem.length() + output.length() + endItem.length()
                println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
            }
        }
    }
}